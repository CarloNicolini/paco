cmake_minimum_required(VERSION 2.8 FATAL_ERROR)
project(Fagso)

set(GRAPH_SRCS
    Graph.cpp
CPMVertexPartition.cpp
Graph.cpp
GraphHelper.cpp
LinearResolutionParameterVertexPartition.cpp
ModularityVertexPartition.cpp
MutableVertexPartition.cpp
Optimiser.cpp
RBConfigurationVertexPartition.cpp
RBERVertexPartition.cpp
SignificanceVertexPartition.cpp
SurpriseVertexPartition.cpp
Community.cpp
igraph_utils.cpp
SurpriseFunction.cpp
AsymptoticSurpriseFunction.cpp
ModularityFunction.cpp
SignificanceFunction.cpp
RandomOptimizer.cpp
AnnealOptimizer.cpp
PartitionHelper.cpp
AgglomerativeOptimizer.cpp
)

set(GRAPH_HDRS
CPMVertexPartition.h
Graph.h
GraphHelper.h
ModularityVertexPartition.h
LinearResolutionParameterVertexPartition.h
MutableVertexPartition.h
Optimiser.h   RBConfigurationVertexPartition.h
RBERVertexPartition.h
SignificanceVertexPartition.h
SurpriseVertexPartition.h
Community.h
igraph_utils.h
QualityFunction.h
SurpriseFunction.h
AsymptoticSurpriseFunction.h
SignificanceFunction.h
ModularityFunction.h
QualityOptimizer.h
RandomOptimizer.h
AnnealOptimizer.h
PartitionHelper.h
AgglomerativeOptimizer.h
)

add_library(GRAPH SHARED ${GRAPH_SRCS} ${GRAPH_HDRS})
target_link_libraries(GRAPH ${IGRAPH_LIBRARIES} FAGSO)

add_executable(test_graph test_graph.cpp)
target_link_libraries(test_graph GRAPH)

add_executable(test_graphc test_graphc.cpp)
target_link_libraries(test_graphc GRAPH)

add_executable(test_igraph_matrix test_igraph_matrix.cpp)
target_link_libraries(test_igraph_matrix GRAPH)

add_executable(test_quality_function test_quality_function.cpp)
target_link_libraries(test_quality_function GRAPH)

add_executable(test_partition_helper test_partition_helper.cpp)
target_link_libraries(test_partition_helper GRAPH)

add_executable(test_optimizer test_optimizer.cpp)
target_link_libraries(test_optimizer GRAPH)

if(MATLAB_SUPPORT)
    add_mex(louvain_mx louvain_mx.cpp)
    target_link_libraries(louvain_mx GRAPH ${MATLAB_LIBRARIES})

    add_mex(paco paco.cpp)
    target_link_libraries(paco GRAPH ${MATLAB_LIBRARIES})

    #add_executable(test_paco test_paco.cpp)
    #target_link_libraries(test_paco GRAPH ${MATLAB_LIBRARIES})
endif(MATLAB_SUPPORT)

if(OCTAVE_SUPPORT)
    octave_add_oct(louvain_oct SOURCES louvain_mx.cpp LINK_LIBRARIES GRAPH EXTENSION "mex")
    octave_add_oct(paco_oct SOURCES paco.cpp LINK_LIBRARIES GRAPH EXTENSION "mex")
endif(OCTAVE_SUPPORT)
